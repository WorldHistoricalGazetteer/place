---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plausible-postgres
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: plausible-postgres
  template:
    metadata:
      labels:
        app: plausible-postgres
    spec:
      {{- if .Values.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pod.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.affinity }}
      affinity:
        {{- toYaml .Values.pod.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.tolerations }}
      tolerations:
        {{- toYaml .Values.pod.tolerations | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        command: ["/custom-entrypoint/postgres-root-entrypoint.sh"]
        args: ["postgres", "-c", "shared_buffers=256MB"]
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: true
          capabilities:
            add: [ "SYS_RESOURCE" ]
        envFrom:
          - configMapRef:
              name: plausible-config
        ports:
          - containerPort: {{ .Values.postgres.service.port }}
        volumeMounts:
          - name: postgres-root-entrypoint
            mountPath: /custom-entrypoint
            readOnly: true
          - name: nfs-volume
            subPath: plausible/db-data
            mountPath: /var/lib/postgresql/data
          - name: run
            mountPath: /var/run/postgresql
      volumes:
        - name: postgres-root-entrypoint
          configMap:
            name: postgres-root-entrypoint
            defaultMode: 0755
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: nfs-pvc
        - name: run
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plausible-clickhouse
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.clickhouse.replicas }}
  selector:
    matchLabels:
      app: plausible-clickhouse
  template:
    metadata:
      labels:
        app: plausible-clickhouse
    spec:
      {{- if .Values.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pod.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.affinity }}
      affinity:
        {{- toYaml .Values.pod.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.tolerations }}
      tolerations:
        {{- toYaml .Values.pod.tolerations | nindent 8 }}
      {{- end }}
      containers:
      - name: clickhouse
        image: {{ .Values.clickhouse.image }}
        imagePullPolicy: {{ .Values.clickhouse.imagePullPolicy }}
        resources:
          {{- toYaml .Values.clickhouse.resources | nindent 10 }}
        envFrom:
          - configMapRef:
              name: plausible-config
        env:
          - name: CLICKHOUSE_DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.existingSecretName }}
                key: plausible-clickhouse-url
        ports:
          - containerPort: 8123
        volumeMounts:
          - name: nfs-volume
            subPath: plausible/event-data
            mountPath: /var/lib/clickhouse
          - name: clickhouse-logs
            mountPath: /var/log/clickhouse-server
          - name: clickhouse-config
            mountPath: /etc/clickhouse-server/config.d
            readOnly: true
      volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: nfs-pvc
        - name: clickhouse-logs
          emptyDir: {}  # ephemeral logs (K8s handles retention)
        - name: clickhouse-config
          configMap:
            name: plausible-clickhouse-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plausible
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.plausible.replicas }}
  selector:
    matchLabels:
      app: plausible
  template:
    metadata:
      labels:
        app: plausible
    spec:
      {{- if .Values.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pod.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.affinity }}
      affinity:
        {{- toYaml .Values.pod.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.tolerations }}
      tolerations:
        {{- toYaml .Values.pod.tolerations | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command: [ 'sh', '-c', 'until nc -4 -z plausible-postgres 5432; do echo waiting for postgres; sleep 2; done;' ]
        - name: wait-for-clickhouse
          image: busybox:1.36
          command: [ 'sh', '-c', 'until nc -4 -z plausible-clickhouse 8123; do echo waiting for clickhouse; sleep 2; done;' ]
      containers:
      - name: plausible
        image: {{ .Values.plausible.image }}
        imagePullPolicy: {{ .Values.plausible.imagePullPolicy }}
        command:
          - sh
          - -c
          - "/entrypoint.sh run"
        envFrom:
          - configMapRef:
              name: plausible-config
        env:
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.existingSecretName }}
                key: plausible-secret-key-base
          - name: ADMIN_USER_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.existingSecretName }}
                key: plausible-admin-user-pwd
          - name: SMTP_USER_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.existingSecretName }}
                key: plausible-smtp-user-pwd
        ports:
          - containerPort: {{ .Values.plausible.service.targetPort }}
            name: http
        volumeMounts:
          - name: run
            mountPath: /var/lib/plausible
      volumes:
        - name: run
          emptyDir: {}
