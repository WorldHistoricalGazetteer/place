apiVersion: apps/v1
kind: Deployment
metadata:
  name: tileserver-gl
  namespace: {{ .Values.namespace }}
  labels:
    tileserver-gl: "true"
    app: tileserver-gl
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      tileserver-gl: "true"
  template:
    metadata:
      labels:
        tileserver-gl: "true"
        app: tileserver-gl
        tileapi: "true"
    spec:
      affinity: {{ .Values.affinity | toYaml | nindent 8 }}
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsGroup }}
      initContainers:
        - name: git-sparse-clone
          image: alpine/git
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - |
            set -eux
            REPO_DIR="{{ .Values.pv.repository.mountPath }}"
            git init "$REPO_DIR"
            git config --global --add safe.directory "$REPO_DIR"
            cd "$REPO_DIR"
            git remote get-url origin || git remote add origin {{ .Values.tileserver.git.url }}
            git config core.sparseCheckout true
            echo "{{ .Values.tileserver.git.sourceFolder }}/" > .git/info/sparse-checkout
            git fetch --depth 1 origin main
            git reset --hard origin/main
            chmod -R 775 "$REPO_DIR"
          volumeMounts:
            - name: {{ .Values.pv.repository.name }}
              mountPath: {{ .Values.pv.repository.mountPath }}
            - name: nfs-volume
              mountPath: {{ .Values.pv.tiles.mountPath }}
              subPath: tiles
      containers:
      - name: tileserver-gl
        image: {{ .Values.tileserver.image }}:{{ .Values.tileserver.imageTag }}
        imagePullPolicy: {{ .Values.tileserver.imagePullPolicy }}
        securityContext: {{ toYaml .Values.securityContext | nindent 10 }}
        command: ["bash", "-c"]
        args:
          - |
            set -eux
            REPO_PATH="{{ .Values.pv.repository.mountPath }}{{ .Values.pv.repository.gitFolder }}"
            TILE_PATH="{{ .Values.pv.tiles.mountPath }}"

            echo "üîç Checking repository contents:"
            ls -la "$REPO_PATH"
            echo "üîç Checking tiles contents:"
            ls -la "$TILE_PATH"

            echo "üß© Merging configs..."
            node "$REPO_PATH/reconfiguration/merge-config.js" \
                 "$REPO_PATH/reconfiguration/base-config.json" \
                 "$REPO_PATH/configs/config.json" \
                 "$TILE_PATH"

            echo "üöÄ Starting Tileserver-GL..."
            node /usr/src/app/src/main.js \
                 --config "$REPO_PATH/configs/config.json" \
                 --verbose
        workingDir: /usr/src/app
        ports:
        - containerPort: {{ .Values.service.tileserver.port }}
        volumeMounts:
        - name: nfs-volume
          mountPath: /mnt/data/tiles
          subPath: tiles
        - name: {{ .Values.pv.repository.name }}
          mountPath: {{ .Values.pv.repository.mountPath }}
        resources: {{ toYaml .Values.tileserver.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.tileserver.port }}
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.tileserver.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: tile-api
        image: {{ .Values.tileapi.image }}:{{ .Values.tileapi.imageTag }}
        imagePullPolicy: {{ .Values.tileapi.imagePullPolicy }}
        securityContext: {{ toYaml .Values.securityContext | nindent 10 }}
        ports:
        - containerPort: {{ .Values.service.tileapi.port }}
        env:
        - name: PORT
          value: "{{ .Values.service.tileapi.port }}"
        - name: TIPPECANOE_IMAGE
          value: "{{ .Values.tippecanoe.image }}"
        - name: TIPPECANOE_IMAGE_TAG
          value: "{{ .Values.tippecanoe.imageTag }}"
        - name: TIPPECANOE_IMAGE_PULL_POLICY
          value: "{{ .Values.tippecanoe.imagePullPolicy }}"
        - name: TIPPECANOE_NAMESPACE
          value: "{{ .Values.namespace }}"
        - name: VESPA_NAMESPACE
          value: "{{ .Values.vespa.namespace }}"
        - name: VESPA_QUERY_HOST
          value: "http://vespa-query.{{ .Values.vespa.namespace }}.svc.cluster.local:8080"
        - name: VESPA_FEED_HOST
          value: "http://vespa-feed.{{ .Values.vespa.namespace }}.svc.cluster.local:8080"
        - name: VESPA_API_HOST
          value: "http://vespa-api.{{ .Values.vespa.namespace }}.svc.cluster.local:8082"
        resources: {{ toYaml .Values.tileapi.resources | nindent 10 }}
        volumeMounts:
        - name: nfs-volume
          mountPath: /mnt/data/tiles
          subPath: tiles
        - name: {{ .Values.pv.repository.name }}
          mountPath: {{ .Values.pv.repository.mountPath }}
      volumes:
      - name: nfs-volume
        persistentVolumeClaim:
          claimName: nfs-pvc
      - name: {{ .Values.pv.repository.name }}
        emptyDir: {}
