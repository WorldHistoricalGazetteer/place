apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - all
                - general
      initContainers:
        - name: django-clone-repository
          image: worldhistoricalgazetteer/web:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              if [ ! -d "/app/.git" ]; then
                echo "Repository not found, cloning...";
                git clone -b main https://github.com/WorldHistoricalGazetteer/whg3.git /app || { echo 'Cloning failed'; exit 1; }
              else
                echo "Repository already cloned.";
              fi
          volumeMounts:
            - name: app
              mountPath: /app
        - name: django-init
          image: worldhistoricalgazetteer/web:latest
          command:
            - "/bin/sh"
            - "-c"
            - "/app/entrypoint-django-init.sh"
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "whg.settings"
            - name: IMAGE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: image-version
            - name: USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: user-password
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: db-password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: db-name
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: db-url
            - name: REDIS_URL
              value: "redis://redis:6379"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: secret-key
          volumeMounts:
            - name: app
              mountPath: /app
            - name: static-files
              mountPath: /app/static
            - name: media-files
              mountPath: /app/media
            - name: config-volume
              mountPath: /app/config/configMap
              readOnly: true
            - name: secret-volume
              mountPath: /app/config/secret
              readOnly: true
            - name: entrypoint-django-init
              mountPath: /app/entrypoint-django-init.sh
            - name: whg-env-template
              mountPath: /app/env_template.py
            - name: whg-local-settings
              mountPath: /app/whg/local_settings.py
            - name: whg-ca-cert
              mountPath: /app/whg/authorisation/ca-cert.pem
      containers:
        - name: django-container
          image: worldhistoricalgazetteer/web:latest
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "until nc -z postgres 5432; do echo waiting for postgres...; sleep 2; done"]
          command: ["gunicorn", "whg.wsgi:application", "--bind", "0.0.0.0:8000", "--timeout", "1200", "-w", "4"]
          ports:
            - containerPort: 443
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "whg.settings"
            - name: IMAGE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: image-version
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: db-password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: db-name
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: db-url
            - name: REDIS_URL
              value: "redis://redis:6379"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: secret-key
          volumeMounts:
            - name: app
              mountPath: /app
            - name: static-files
              mountPath: /app/static
            - name: media-files
              mountPath: /app/media
            - name: config-volume
              mountPath: /app/config/configMap
              readOnly: true
            - name: secret-volume
              mountPath: /app/config/secret
              readOnly: true
            - name: whg-local-settings
              mountPath: /app/whg/local_settings.py
            - name: whg-ca-cert
              mountPath: /app/whg/authorisation/ca-cert.pem
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - 'python manage.py check --deploy || true; python manage.py showmigrations | grep "[X]" || true'
                # TODO: Replace the above with the following to prevent deployment if migrations are not up-to-date or if DEBUG is True
                # - 'python manage.py check --deploy && python manage.py showmigrations | grep "[X]"'
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: app
          persistentVolumeClaim:
            claimName: django-app-pvc
        - name: static-files
          persistentVolumeClaim:
            claimName: django-static-pvc
        - name: media-files
          persistentVolumeClaim:
            claimName: django-media-pvc
        - name: config-volume
          configMap:
            name: whg-config
        - name: secret-volume
          secret:
            secretName: whg-secret
        # The following volume for the entrypoint-django-init.sh file is added with absolute path dynamically using `yq`
        # - name: entrypoint-django-init
        #   hostPath:
        #     path: ---
        #     type: File
        # The following volume for the env_template.py file is added with absolute path dynamically using `yq`
        # - name: whg-env-template
        #   hostPath:
        #     path: ---
        #     type: File
        # The following volume for the local_settings.py file is added with absolute path dynamically using `yq`
        # - name: whg-local-settings
        #   hostPath:
        #     path: ---
        #     type: File
        # The following volume for the ca-cert.pem file is added with absolute path dynamically using `yq`
        # - name: whg-ca-cert
        #   hostPath:
        #     path: ---
        #     type: File