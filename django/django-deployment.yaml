apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
        - name: git-sync
          image: alpine/git
          command: ["git", "clone", "-b", "main", "https://github.com/WorldHistoricalGazetteer/whg3.git", "/repo"]
          volumeMounts:
            - name: repo
              mountPath: /repo
      containers:
        - name: django-container
          image: worldhistoricalgazetteer/web:${IMAGE_VERSION}"
          command: ["/bin/bash", "/app/entrypoints/entrypoint-web.sh"]
          ports:
            - containerPort: 8000
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "whg.settings"
            - name: IMAGE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: image_version
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: whg-config
                  key: db_user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: db_password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: whg-config
                  key: db_name
            - name: DATABASE_URL
              value: "postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}"
            - name: REDIS_URL
              value: "redis://redis:6379"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: whg-secret
                  key: secret_key
          volumeMounts:
            - name: repo
              mountPath: /app
            - name: static-files
              mountPath: /app/static
            - name: media-files
              mountPath: /app/media
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: repo
          emptyDir: {}
        - name: static-files
          persistentVolumeClaim:
            claimName: django-static-pvc
        - name: media-files
          persistentVolumeClaim:
            claimName: django-media-pvc
