apiVersion: v1
kind: ConfigMap
metadata:
  name: webpack-config
data:
  package.json: |
    {
      "name": "whg-webpack",
      "version": "1.0.0",
      "description": "Webpack configuration for WHG project",
      "main": "webpack.config.js",
      "scripts": {
        "build": "webpack",
        "watch": "webpack --watch"
      },
      "dependencies": {
        "@citation-js/plugin-csl": "^0.7.14",
        "@fortawesome/fontawesome-free": "^6.5.1",
        "@mapbox/mapbox-gl-draw": "^1.4.3",
        "@maptiler/sdk": "^1.1.2",
        "@turf/turf": "^6.5.0",
        "bootstrap": "~5.2.3",
        "canvas-toBlob": "^1.0.0",
        "canvg": "^4.0.1",
        "citation-js": "^0.7.15",
        "clipboard": "~2.0.11",
        "copy-webpack-plugin": "^11.0.0",
        "css-loader": "^6.8.1",
        "css-minimizer-webpack-plugin": "^1.0.0",
        "d3": "^4.13.0",
        "d3-color": "^3.1.0",
        "dotenv": "^16.3.1",
        "dotenv-webpack": "^8.0.1",
        "express": "^4.18.2",
        "FileSaver": "^0.10.0",
        "jquery": "~3.6.3",
        "jquery-ui": "~1.13.2",
        "jspdf": "^2.5.1",
        "lodash": "^4.17.21",
        "maplibre-gl": "^3.2.1",
        "mini-css-extract-plugin": "^2.7.6",
        "moment": "^2.29.4",
        "raw-loader": "^4.0.2",
        "sass": "^1.50.2",
        "sass-loader": "^12.3.0",
        "script-loader": "^0.7.2",
        "select2": "^4.0.13",
        "spin.js": "^4.1.1",
        "style-loader": "^3.3.3",
        "terser-webpack-plugin": "^5.3.9",
        "twitter-typeahead-components-bundle": "^1.0.3",
        "webpack": "^5.89.0",
        "webpack-bundle-analyzer": "^4.10.1",
        "webpack-cli": "^5.1.4"
      }
    }
  webpack.config.js: |
    const path = require('path');
    const CssMinimizerPlugin = require('css-minimizer-webpack-plugin');
    const MiniCssExtractPlugin = require('mini-css-extract-plugin');
    const TerserPlugin = require('terser-webpack-plugin');
    const Dotenv = require('dotenv-webpack');
    const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;
    const CopyWebpackPlugin = require('copy-webpack-plugin');

    const isProduction = process.env.ENV_CONTEXT === 'whgazetteer-org';

    module.exports = {
      mode: isProduction ? 'production' : 'development',
      watch: true,
      watchOptions: {
        poll: 1000
      },
      entry: {
        areas: '/app/whg/webpack/js/areas.js',
        base: '/app/whg/webpack/js/base.js',
        'builders-collection-dataset': '/app/whg/webpack/js/builders-collection-dataset.js',
        'builders-collection-place': '/app/whg/webpack/js/builders-collection-place.js',
        'builders-dataset': '/app/whg/webpack/js/builders-dataset.js',
        'builders-dataset-status': '/app/whg/webpack/js/builders-dataset-status.js',
        docs: '/app/whg/webpack/js/docs.js',
        ds_browse: '/app/whg/webpack/js/ds_browse.js',
        gallery: '/app/whg/webpack/js/gallery.js',
        home: '/app/whg/webpack/js/home.js',
        mapAndTable: '/app/whg/webpack/js/mapAndTable.js',
        places: '/app/whg/webpack/js/places.js',
        portal: '/app/whg/webpack/js/portal.js',
        review: '/app/whg/webpack/js/review.js',
        search: '/app/whg/webpack/js/search.js',
        search_functions: '/app/whg/webpack/js/search_resources.js',
        tasks: '/app/whg/webpack/js/tasks.js',
        'tileset-tools': '/app/whg/webpack/js/tileset-tools.js',
        whg_maplibre: '/app/whg/webpack/js/whg_maplibre.js',
        workbench: '/app/whg/webpack/js/workbench.js'
      },
      output: {
        filename: '[name].bundle.js',
        path: path.resolve(__dirname, 'static/webpack')
      },
      module: {
        rules: [
          {
            test: /\.css$/,
            use: [MiniCssExtractPlugin.loader, 'css-loader']
          },
          {
            test: /\.scss$/,
            use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader']
          },
          {
            test: /\.csl$/,
            use: 'raw-loader'
          }
        ]
      },
      plugins: [
        new Dotenv({
          path: '/app/.env/.env'
        }),
        new MiniCssExtractPlugin({
          filename: '[name].bundle.css'
        }),
        new BundleAnalyzerPlugin({
          analyzerMode: 'static',
          reportFilename: 'webpackReport.html',
          generateStatsFile: true,
          statsFilename: 'stats.json'
        }),
        new CopyWebpackPlugin({
          patterns: [
            {
              from: 'node_modules/jquery/dist/jquery.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/bootstrap/dist/js/bootstrap.bundle.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/bootstrap/dist/css/bootstrap.min.css',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/jquery-ui/dist/jquery-ui.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/jquery-ui/dist/themes/base/jquery-ui.min.css',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/clipboard/dist/clipboard.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/@fortawesome/fontawesome-free/css/all.min.css',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/twitter-typeahead-components-bundle/main.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/@turf/turf/turf.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/d3/build/d3.min.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/select2/dist/js/select2.full.js',
              to: '/app/CDNfallbacks/'
            },
            {
              from: 'node_modules/select2/dist/css/select2.css',
              to: '/app/CDNfallbacks/'
            }
          ]
        })
      ],
      resolve: {
        extensions: ['.js', '.xml', '.csl'],
        modules: [
          path.resolve(__dirname, 'static/admin/js/vendor'),
          path.resolve(__dirname, 'node_modules')
        ]
      },
      externals: {
        "jquery": "jQuery"
      },
      optimization: {
        splitChunks: {
          chunks: 'async',
          minSize: 20000,
          minRemainingSize: 0,
          minChunks: 1,
          maxAsyncRequests: 30,
          maxInitialRequests: 30,
          enforceSizeThreshold: 50000,
          cacheGroups: {
            default: {
              minChunks: 2,
              priority: -20,
              reuseExistingChunk: true
            }
          }
        },
        minimizer: [
          new TerserPlugin({
            terserOptions: {
              format: {
                comments: false
              }
            },
            extractComments: false
          }),
          new CssMinimizerPlugin()
        ]
      }
    };
