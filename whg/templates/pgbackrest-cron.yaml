apiVersion: batch/v1
kind: CronJob
metadata:
  name: pgbackrest-backup
  namespace: {{ .Values.namespace }}
spec:
  schedule: {{ .Values.postgres.fullBackupSchedule }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: kubectl
            image: {{ .Values.postgres.cronImage }}:{{ .Values.postgres.cronImageTag }}
            imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
            command:
              - /bin/sh
              - -c
              - |
                POD_NAME=$(kubectl get pods -n {{ .Values.namespace }} -l app=postgres -o jsonpath='{.items[0].metadata.name}')
                kubectl exec -it $POD_NAME -n {{ .Values.namespace }} -- pgbackrest --stanza=whgdb --log-level-console=info backup
          restartPolicy: OnFailure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.namespace }}
  name: kubectl-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "create"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubectl-role-binding
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.namespace }}
roleRef:
  kind: Role
  name: kubectl-role
  apiGroup: rbac.authorization.k8s.io