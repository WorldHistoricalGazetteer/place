apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{ .Values.namespace }}
  labels:
    app: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: whg-site
                    operator: In
                    values:
                      - "true"
      containers:
      - name: redis
        image: "{{ .Values.redis.image }}:{{ .Values.redis.imageTag }}"
        imagePullPolicy: "{{ .Values.redis.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.redis.port }}
        resources: {{- toYaml .Values.redis.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /data
          name: redis-storage
        args:
        - "--appendonly"
        - "yes"
        livenessProbe:
          tcpSocket:
            port: {{ .Values.redis.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc