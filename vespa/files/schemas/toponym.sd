# The Toponym model captures the name of a place (a toponym), and includes linguistic metadata, such as
# language, script, region, and variant, based on the BCP 47 standard. This schema also allows for
# associating the toponym with multiple places, facilitating reverse lookups. Additionally, it supports
# vector embeddings, both phonetic and semantic, to enable advanced search and similarity queries.

schema toponym {

    document toponym {

        field name_strict type string {
            # The toponym (e.g., "London", "Londinium"), with strict matching.
            indexing: attribute | summary
            match { exact }
        }

        field name type string {
            # The toponym (e.g., "London", "Londinium").
            indexing: attribute | summary
            stemming: multiple
            attribute: fast-search
        }

        field places type array<string> {
            # List of unique place IDs this toponym is associated with.
            # Allows reverse lookup of places associated with a toponym.
            indexing: attribute | summary
            attribute: fast-search
        }

        ########### BCP 47 Linguistic Fields ###########

        field bcp47_language type string {
            # Language (required): ISO 639-1/639-3 codes, e.g., "en", "zh".
            indexing: attribute | summary
        }

        field bcp47_script type string {
            # Script (optional): ISO 15924 codes, e.g., "Latn", "Cyrl".
            indexing: attribute | summary
        }

        field bcp47_region type string {
            # Region (optional): ISO 3166-1 alpha-2 codes, e.g., "GB", "US".
            indexing: attribute | summary
        }

        field bcp47_variant type string {
            # Variant (optional): Custom identifiers, e.g., "pinyin", "pre1993".
            indexing: attribute | summary
        }

        ########### Vector Embeddings ###########

        field phonetic_embedding type tensor<float>(x[128]) {
            # Phonetic embedding of the toponym.
            indexing: attribute
        }

        field semantic_embedding type tensor<float>(x[128]) {
            # Semantic embedding of the toponym.
            indexing: attribute
        }

        ########### Metadata ###########

        field created type long {
            # Unix timestamp of when the toponym was created.
            indexing: attribute | summary
        }

    }
}
