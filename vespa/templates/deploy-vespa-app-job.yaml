apiVersion: batch/v1
kind: Job
metadata:
  name: deploy-vespa-app
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  ttlSecondsAfterFinished: 300 # Automatically clean up job after 5 minutes
  template:
    spec:
      initContainers: # Init container to force wait for readiness of configservers
        - {{- tpl .Values.common.initContainer $ | nindent 10 }}
      containers:
      - name: deploy-app
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - sh
          - -c
          - |
            printf "\nDeploying Vespa application package...\n";
            mkdir -p /tmp/application-deployment
            cp -L /application-deployment/hosts-services/* /tmp/application-deployment
            cp -Lr /application-deployment/schemas /tmp/application-deployment/schemas
            cp -Lr /application-deployment/docproc /tmp/application-deployment/docproc
            # Strip the carriage returns from all files including those in subdirectories
            find /tmp/application-deployment -type f -exec sed -i 's/\r//' {} \;
            printf "\nContents of /tmp/application-deployment:\n";
            ls -la /tmp/application-deployment
            printf "\nContents of /tmp/application-deployment/schemas:\n";
            ls -la /tmp/application-deployment/schemas
            printf "\nContents of /tmp/application-deployment/docproc:\n";
            ls -la /tmp/application-deployment/docproc
            printf "\nContents of /tmp/application-deployment/hosts.xml:\n";
            cat -A /tmp/application-deployment/hosts.xml
            printf "\nContents of /tmp/application-deployment/services.xml:\n";
            cat -A /tmp/application-deployment/services.xml
            printf "\nDeploying Vespa application package...\n";
            vespa-deploy prepare /tmp/application-deployment && vespa-deploy activate
            printf "\nDeployment complete.\n";
        envFrom:
          - configMapRef:
              name: vespa-config
        volumeMounts:
          - name: vespa-application-hosts-services
            mountPath: /application-deployment/hosts-services
            readOnly: true
          - name: vespa-application-schemas
            mountPath: /application-deployment/schemas
            readOnly: true
          - name: vespa-application-docproc
            mountPath: /application-deployment/docproc
            readOnly: true
      volumes:
        - name: vespa-application-hosts-services
          configMap:
            name: vespa-application-hosts-services
        - name: vespa-application-schemas
          configMap:
            name: vespa-application-schemas
        - name: vespa-application-docproc
          configMap:
            name: vespa-application-docproc
      restartPolicy: Never
