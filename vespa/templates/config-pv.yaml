{{- range $.Values.configserver.pvs }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: vespa-config-{{ .name }}-storage
  namespace: {{ $.Values.namespace }}
provisioner: kubernetes.io/no-provisioner  # using hostPath
reclaimPolicy: Retain  # Ensures data is kept when PVC is deleted
volumeBindingMode: WaitForFirstConsumer  # Prevents PV binding until PVC is created
---
{{- end }}
{{- $replicas := ($.Values.replicaCounts.configserver | int)}}
{{- range $index := until $replicas }}
{{- range $.Values.configserver.pvs }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vespa-{{ .name }}-pv-{{ $index }}
  namespace: {{ $.Values.namespace }}
spec:
  capacity:
    storage: {{ .storageSize }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: vespa-config-{{ .name }}-storage
  local:
    path: "{{ $.Values.configserver.pvRootPath }}/{{ $index }}/{{ .name }}"
  nodeAffinity: {{ toYaml $.Values.nodeAffinities.admin | nindent 4 }}
---
{{- end }}
{{- end }}