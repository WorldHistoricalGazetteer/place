apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vespa-configserver
  namespace: vespa
spec:
  replicas: {{ .Values.replicaCounts.configserver }}
  selector:
    matchLabels:
      app: vespa-configserver
      name: vespa-internal
  serviceName: vespa-internal
  template:
    metadata:
      labels:
        app: vespa-configserver
        name: vespa-internal
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{ toYaml .Values.nodeAffinities.admin.required | nindent 12 }}
      containers:
      - name: vespa-configserver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args: ["configserver,services"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext: {{- toYaml .Values.securityContext.container | nindent 10 }}
        volumeMounts:
          {{- $replicas := ($.Values.replicaCounts.configserver | int)}}
          {{- range $index := until $replicas }}
          {{- range $.Values.configserver.pvs }}
          - name: vespa-{{ .name }}-{{ $index }}
            mountPath: /mounted-volume/{{ $index }}/{{ .name }}
          {{- end }}
          {{- end }}
          - name: dummy
            mountPath: /workspace
        command: ["/bin/sh", "-c"]
        args:
          - |
            ordinal=$(hostname | grep -o '[0-9]*$')
            {{- range $.Values.configserver.pvs }}
            mkdir -p {{ .mountPath }}
            ln -sf /mounted-volume/$ordinal/{{ .name }} {{ .mountPath }}
            {{- end }}
            exec vespa-start-configserver
        envFrom:
          - configMapRef:
              name: vespa-config
        resources: {{- toYaml .Values.resources.configserver | nindent 10 }}
      volumes:
        {{- range $index := until $replicas }}
        {{- range $.Values.configserver.pvs }}
        - name: vespa-{{ .name }}-{{ $index }}
          persistentVolumeClaim:
            claimName: vespa-{{ .name }}-pvc-{{ $index }}
        {{- end }}
        {{- end }}
        - name: dummy # Dummy volume required to mount /workspace
          emptyDir: {}