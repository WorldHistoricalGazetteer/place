apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vespa-configserver
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCounts.configserver }}
  selector:
    matchLabels:
      app: vespa-configserver
      name: vespa-internal
  serviceName: vespa-internal
  template:
    metadata:
      labels:
        app: vespa-configserver
        name: vespa-internal
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{ toYaml .Values.nodeAffinities.admin.required | nindent 12 }}
      containers:
      - name: vespa-configserver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args: ["configserver,services"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext: {{- toYaml .Values.securityContext.container | nindent 10 }}
        volumeMounts:
          {{- range $.Values.configserver.pvs }}
          - name: vespa-{{ .name }}
            mountPath: {{ .mountPath }}
          {{- end }}
        envFrom:
          - configMapRef:
              name: vespa-config
        resources: {{- toYaml .Values.resources.configserver | nindent 10 }}
  volumeClaimTemplates:
    {{- range $.Values.configserver.pvs }}
    - metadata:
        name: vespa-{{ .name }}
        namespace: {{ $.Values.namespace }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "vespa-config-{{ .name }}-storage"
        resources:
          requests:
            storage: {{ .storageSize}}
    {{- end }}