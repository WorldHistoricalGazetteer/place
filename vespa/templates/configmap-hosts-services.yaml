apiVersion: v1
kind: ConfigMap
metadata:
  name: vespa-application-hosts-services
  namespace: {{ .Values.namespace }}
data:
  {{ (.Files.Glob "files/application/*").AsConfig | nindent 2 }}
  hosts.xml: |
    <?xml version="1.0" encoding="utf-8" ?>
    <hosts>
        {{- $headlessService := "vespa-internal" }}
        {{- $namespace := "vespa" }}

        {{- range $i := until (int .Values.replicaCounts.configserver) }}
        <host name="vespa-configserver-{{ $i }}.{{ $headlessService }}.{{ $namespace }}.svc.cluster.local">
            <alias>vespa-configserver-{{ $i }}</alias>
        </host>
        {{- end }}

        {{- range $i := until (int .Values.replicaCounts.admin) }}
        <host name="vespa-admin-{{ $i }}.{{ $headlessService }}.{{ $namespace }}.svc.cluster.local">
            <alias>vespa-admin-{{ $i }}</alias>
        </host>
        {{- end }}

        {{- range $i := until (int .Values.replicaCounts.feed) }}
        <host name="vespa-feed-container-{{ $i }}.{{ $headlessService }}.{{ $namespace }}.svc.cluster.local">
            <alias>vespa-feed-container-{{ $i }}</alias>
        </host>
        {{- end }}

        {{- range $i := until (int .Values.replicaCounts.query) }}
        <host name="vespa-query-container-{{ $i }}.{{ $headlessService }}.{{ $namespace }}.svc.cluster.local">
            <alias>vespa-query-container-{{ $i }}</alias>
        </host>
        {{- end }}

        {{- range $i := until (int .Values.replicaCounts.content) }}
        <host name="vespa-content-{{ $i }}.{{ $headlessService }}.{{ $namespace }}.svc.cluster.local">
            <alias>vespa-content-{{ $i }}</alias>
        </host>
        {{- end }}
    </hosts>
  services.xml: |
    <?xml version="1.0" encoding="utf-8" ?>
    <services version="1.0">
        <admin version="2.0">
            <adminserver hostalias="vespa-admin-0"/>
            <configservers>
                {{- range $i := until (.Values.replicaCounts.configserver | int) }}
                <configserver hostalias="vespa-configserver-{{ $i }}"/>
                {{- end }}
            </configservers>
            <cluster-controllers>
                {{- range $i := until (.Values.replicaCounts.configserver | int) }}
                <cluster-controller hostalias="vespa-configserver-{{ $i }}"/>
                {{- end }}
            </cluster-controllers>
            <slobroks>
                {{- range $i := until (.Values.replicaCounts.configserver | int) }}
                <slobrok hostalias="vespa-configserver-{{ $i }}"/>
                {{- end }}
            </slobroks>
        </admin>

        <container id="feed" version="1.0">
            <document-api/>
            <document-processing/>
            <search/>
            <nodes>
                {{- range $i := until (.Values.replicaCounts.feed | int) }}
                <node hostalias="vespa-feed-container-{{ $i }}"/>
                {{- end }}
            </nodes>
        </container>

        <container id="query" version="1.0">
            <search/>
            <nodes>
                {{- range $i := until (.Values.replicaCounts.query | int) }}
                <node hostalias="vespa-query-container-{{ $i }}"/>
                {{- end }}
            </nodes>
        </container>

        <content id="content" version="1.0">
            <min-redundancy>{{ .Values.replicaCounts.content | int }}</min-redundancy>
            <documents>
                {{- range $path, $ := .Files.Glob "files/schemas/*" }}
                {{- $basename := $path | base | trimSuffix ".sd" }}
                <document type="{{ $basename }}" mode="index"/>
                {{- end }}
                <document-processing cluster="feed" />
            </documents>
            <nodes>
                {{- range $i := until (.Values.replicaCounts.content | int) }}
                <node hostalias="vespa-content-{{ $i }}" distribution-key="{{ $i }}"/>
                {{- end }}
            </nodes>
        </content>
    </services>