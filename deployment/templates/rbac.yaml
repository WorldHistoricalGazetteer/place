apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-manager
  namespace: management
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: helm-manager
rules:
  # Helm needs to manage releases
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "services", "pods", "persistentvolumeclaims", "persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For deployments, statefulsets, daemonsets, etc.
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For jobs and cronjobs
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For ingress
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For RBAC resources (if your charts create them)
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For service accounts
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # For namespaces (if needed)
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: helm-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: helm-manager
subjects:
  - kind: ServiceAccount
    name: helm-manager
    namespace: management